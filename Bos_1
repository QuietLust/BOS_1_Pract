#!/bin/bash

# Функция для вывода справки
print_help() {
    echo "Usage: $0 [OPTIONS]"
    echo "Options:"
    echo "  -u, --users         Выводит перечень пользователей и их домашних директорий"
    echo "  -p, --processes     Выводит перечень запущенных процессов"
    echo "  -h, --help          Выводит справку"
    echo "  -l, --log PATH      Замещает вывод на экран выводом в файл по заданному пути PATH"
    echo "  -e, --errors PATH   Замещает вывод ошибок из потока stderr в файл по заданному пути PATH"
}

# Функция для вывода пользователей и их домашних директорий
list_users() {
    cut -d: -f1,6 /etc/passwd | sort
}

# Функция для вывода запущенных процессов
list_processes() {
    ps -e -o pid,comm | sort -n
}

# Функция для проверки доступа к пути
check_path() {
    local path="$1"
    if [ ! -w "$path" ]; then
        echo "Ошибка: Невозможно записать в файл $path" >&2
        exit 1
    fi
}

# Обработка аргументов командной строки
TEMP=$(getopt -o upl:e:h -l users,processes,log:,errors:,help -- "$@")
if [ $? != 0 ] ; then echo "Ошибка в параметрах командной строки" >&2 ; exit 1 ; fi

eval set -- "$TEMP"

LOG_FILE=""
ERROR_FILE=""

while true ; do
    case "$1" in
        -u|--users) USERS=1 ; shift ;;
        -p|--processes) PROCESSES=1 ; shift ;;
        -l|--log) LOG_FILE="$2" ; check_path "$LOG_FILE" ; shift 2 ;;
        -e|--errors) ERROR_FILE="$2" ; check_path "$ERROR_FILE" ; shift 2 ;;
        -h|--help) print_help ; exit 0 ;;
        --) shift ; break ;;
        *) echo "Ошибка в параметрах командной строки" >&2 ; exit 1 ;;
    esac
done

# Перенаправление stderr в файл, если указан
if [ -n "$ERROR_FILE" ]; then
    exec 2>"$ERROR_FILE"
fi

# Выполнение действий
if [ -n "$USERS" ]; then
    if [ -n "$LOG_FILE" ]; then
        list_users | tee "$LOG_FILE"
    else
        list_users
    fi
fi

if [ -n "$PROCESSES" ]; then
    if [ -n "$LOG_FILE" ]; then
        list_processes | tee "$LOG_FILE"
    else
        list_processes
    fi
fi
